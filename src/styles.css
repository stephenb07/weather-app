/* Base styles */
body {
    min-height: 100vh;
    position: relative;
    color: #ffffff;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, 
        var(--gradient-start, #0052cc) 0%,
        var(--gradient-mid, #2566c9) 25%,
        var(--gradient-start, #0077ff) 50%,
        var(--gradient-mid, #2566c9) 75%,
        var(--gradient-start, #0052cc) 100%
    );
    background-size: 400% 400%;
    animation: gradientFlow 8s ease infinite;
    z-index: -1;
    opacity: 0.9;
    transition: opacity 0.5s ease;
    will-change: transform, opacity;
}

body.loaded::before {
    opacity: 1;
}

body[data-theme="ocean"] {
    --gradient-start: #0066cc;
    --gradient-mid: #4d94ff;
}

body[data-theme="sunset"] {
    --gradient-start: #e65c00;
    --gradient-mid: #ff8533;
}

body[data-theme="forest"] {
    --gradient-start: #1a8d1a;
    --gradient-mid: #2eb82e;
}

body[data-theme="aurora"] {
    --gradient-start: #4a148c;
    --gradient-mid: #7b1fa2;
}

body {
    transition: --gradient-start 0.5s ease, --gradient-mid 0.5s ease;
}

/* Main Container */
.container {
    min-height: 100vh;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 1200px;
    margin: 0 auto;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.5px;
}

button, input {
    text-shadow: none;
    font-weight: 500;
}

button {
    font-weight: 600;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

input::placeholder {
    color: rgba(255, 255, 255, 0.8);
    font-weight: 500;
}

input {
    color: #ffffff;
    font-weight: 500;
}

/* Search Section */
.search-section {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    padding: 0.5rem;
}

#searchInput {
    max-width: 300px;
}

/* Weather Card Base Styles */
.weather-card {
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    padding: 1.5rem;
    border-radius: 1rem;
    text-align: center;
    transition: all 0.3s ease;
    margin: 0.5rem auto;
    max-width: 800px;
    transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.weather-card h2 {
    font-size: 1.5rem !important;
    margin-bottom: 0.5rem !important;
}

.weather-card .text-6xl {
    font-size: 2.5rem !important;
    margin-bottom: 0.5rem !important;
}

.weather-card .text-5xl {
    font-size: 2rem !important;
    margin-bottom: 0.5rem !important;
}

.weather-card .text-xl {
    font-size: 1.1rem !important;
    margin-bottom: 0.5rem !important;
}

/* Weather Card Animation */
.weather-card {
    transform-origin: center;
    will-change: transform;
}

.weather-card.bounce-in {
    animation: cardBounce 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

@keyframes cardBounce {
    0% { transform: scale(0.7); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}

/* Detail Boxes */
.detail-box {
    padding: 0.5rem;
    font-size: 0.9rem !important;
    transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.detail-box i {
    font-size: 1.2rem;
    margin-bottom: 0.2rem;
}

/* Forecast Section */
.forecast-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 0.5rem;
    margin-top: 0.5rem;
}

.forecast-card {
    padding: 0.75rem;
    font-size: 0.9rem;
    transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.forecast-card i {
    font-size: 1.5rem;
    margin: 0.3rem 0;
}

.weather-icon {
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.3));
}

.theme-transition {
    transition: all 0.5s ease-in-out;
}

.temp-transition {
    transition: all 0.3s ease-in-out;
}

.animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
}

.animate-bounce-in {
    animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

.text-white {
    color: #ffffff !important;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

.text-white-80 {
    color: #ffffff !important;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    opacity: 0.9;
}

/* Animation Base */
.puzzle-card {
    position: relative;
    perspective: 1000px;
    transform-style: preserve-3d;
    will-change: transform;
}

.puzzle-piece {
    position: relative;
    transform-style: preserve-3d;
    will-change: transform;
    transform-origin: center center;
}

/* Animation States */
.puzzle-card.animating .piece1 {
    animation: puzzlePiece1 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating .piece2 {
    animation: puzzlePiece2 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating .piece3 {
    animation: puzzlePiece3 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Keyframes with Precise Positioning */
@keyframes puzzlePiece1 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg); 
    }
    50% { 
        transform: translate3d(-100px, -50px, 100px) rotateX(45deg) rotateY(-30deg);
        opacity: 0.3;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg);
    }
}

@keyframes puzzlePiece2 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg);
    }
    50% { 
        transform: translate3d(100px, -25px, 100px) rotateX(-45deg) rotateY(30deg);
        opacity: 0.3;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg);
    }
}

@keyframes puzzlePiece3 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg);
    }
    50% { 
        transform: translate3d(0, 100px, 100px) rotateX(-60deg) rotateY(45deg);
        opacity: 0.3;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0deg) rotateY(0deg);
    }
}

/* Glow Effect */
.puzzle-card.animating::after {
    content: '';
    position: absolute;
    inset: -10px;
    background: radial-gradient(circle at 50% 50%, 
        rgba(255, 255, 255, 0.4), 
        transparent 70%);
    opacity: 0;
    animation: glowPulse 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    pointer-events: none;
    border-radius: inherit;
}

@keyframes glowPulse {
    0% { opacity: 0; }
    50% { opacity: 0.8; }
    100% { opacity: 0; }
}

/* Entrance Animation */
.puzzle-card.animating.enter {
    animation: cardEnter 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.enter .piece1 {
    animation: enterPiece1 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.enter .piece2 {
    animation: enterPiece2 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.enter .piece3 {
    animation: enterPiece3 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Exit Animation */
.puzzle-card.animating.exit {
    animation: cardExit 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.exit .piece1 {
    animation: exitPiece1 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.exit .piece2 {
    animation: exitPiece2 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.puzzle-card.animating.exit .piece3 {
    animation: exitPiece3 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Card Animations */
@keyframes cardEnter {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes cardExit {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

/* Piece Enter Animations */
@keyframes enterPiece1 {
    0% { 
        transform: translate3d(-100px, -50px, 100px) rotate3d(1, -1, 0, 60deg);
        opacity: 0;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
}

@keyframes enterPiece2 {
    0% { 
        transform: translate3d(100px, -25px, 100px) rotate3d(1, 1, 0, 60deg);
        opacity: 0;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
}

@keyframes enterPiece3 {
    0% { 
        transform: translate3d(0, 100px, 100px) rotate3d(-1, 0, 1, 60deg);
        opacity: 0;
    }
    100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
}

/* Piece Exit Animations */
@keyframes exitPiece1 {
    0% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
    100% { 
        transform: translate3d(-100px, -50px, 100px) rotate3d(1, -1, 0, 60deg);
        opacity: 0;
    }
}

@keyframes exitPiece2 {
    0% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
    100% { 
        transform: translate3d(100px, -25px, 100px) rotate3d(1, 1, 0, 60deg);
        opacity: 0;
    }
}

@keyframes exitPiece3 {
    0% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg);
        opacity: 1;
    }
    100% { 
        transform: translate3d(0, 100px, 100px) rotate3d(-1, 0, 1, 60deg);
        opacity: 0;
    }
}

/* Glow Effect */
.puzzle-card.animating::after {
    content: '';
    position: absolute;
    inset: -10px;
    background: radial-gradient(circle at 50% 50%, 
        rgba(255, 255, 255, 0.4), 
        transparent 70%);
    opacity: 0;
    animation: glowPulse 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    pointer-events: none;
    border-radius: inherit;
    will-change: opacity;
}

@keyframes glowPulse {
    0% { opacity: 0; }
    50% { opacity: 0.8; }
    100% { opacity: 0; }
}

/* High Performance Animation Base */
.puzzle-card {
    position: relative;
    perspective: 1000px;
    transform-style: preserve-3d;
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.puzzle-piece {
    position: relative;
    transform-style: preserve-3d;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    will-change: transform, opacity;
}

/* Optimized Animation States */
.puzzle-card.animating .piece1 {
    animation: puzzlePiece1 1.5s cubic-bezier(0.4, 0, 0.2, 1) both;
}

.puzzle-card.animating .piece2 {
    animation: puzzlePiece2 1.5s cubic-bezier(0.4, 0, 0.2, 1) both;
}

.puzzle-card.animating .piece3 {
    animation: puzzlePiece3 1.5s cubic-bezier(0.4, 0, 0.2, 1) both;
}

/* Smooth Single-Motion Keyframes */
@keyframes puzzlePiece1 {
    0%, 100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg); 
        opacity: 1; 
    }
    50% { 
        transform: translate3d(-100px, -50px, 100px) rotate3d(1, -1, 0, 60deg); 
        opacity: 0.3; 
    }
}

@keyframes puzzlePiece2 {
    0%, 100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg); 
        opacity: 1; 
    }
    50% { 
        transform: translate3d(100px, -25px, 100px) rotate3d(1, 1, 0, 60deg); 
        opacity: 0.3; 
    }
}

@keyframes puzzlePiece3 {
    0%, 100% { 
        transform: translate3d(0, 0, 0) rotate3d(0, 0, 1, 0deg); 
        opacity: 1; 
    }
    50% { 
        transform: translate3d(0, 100px, 100px) rotate3d(-1, 0, 1, 60deg); 
        opacity: 0.3; 
    }
}

/* Smooth Glow Effect */
.puzzle-card.animating::after {
    content: '';
    position: absolute;
    inset: -10px;
    background: radial-gradient(circle at 50% 50%, 
        rgba(255, 255, 255, 0.4), 
        transparent 70%);
    opacity: 0;
    animation: glowPulse 1.5s cubic-bezier(0.4, 0, 0.2, 1) both;
    pointer-events: none;
    border-radius: inherit;
    will-change: opacity;
}

@keyframes glowPulse {
    0%, 100% { opacity: 0; }
    50% { opacity: 0.8; }
}

/* Ultra-smooth Keyframes */
@keyframes puzzlePiece1 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
    20% { 
        transform: translate3d(-120px, -60px, 50px) rotateX(45deg) rotateY(-30deg); 
        opacity: 0.3; 
    }
    80% { 
        transform: translate3d(60px, 30px, 25px) rotateX(-22deg) rotateY(15deg); 
        opacity: 0.7; 
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
}

@keyframes puzzlePiece2 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
    20% { 
        transform: translate3d(120px, -30px, 50px) rotateX(-45deg) rotateY(30deg); 
        opacity: 0.3; 
    }
    80% { 
        transform: translate3d(-60px, 15px, 25px) rotateX(22deg) rotateY(-15deg); 
        opacity: 0.7; 
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
}

@keyframes puzzlePiece3 {
    0% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
    20% { 
        transform: translate3d(0, 120px, 50px) rotateX(-60deg) rotateY(45deg); 
        opacity: 0.3; 
    }
    80% { 
        transform: translate3d(0, -60px, 25px) rotateX(30deg) rotateY(-22deg); 
        opacity: 0.7; 
    }
    100% { 
        transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); 
        opacity: 1; 
    }
}

/* Enhanced Glow Effect */
.puzzle-card.animating::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 50% 50%, 
        rgba(255, 255, 255, 0.2), 
        transparent 70%);
    opacity: 1;
    pointer-events: none;
    border-radius: inherit;
    animation: glowPulse 1s ease-in-out;
}

@keyframes glowPulse {
    0% { opacity: 0; }
    50% { opacity: 1; }
    100% { opacity: 0; }
}

/* Location Change Animation */
@keyframes locationChange {
    0% {
        transform: scale(1) translateY(0);
        opacity: 1;
    }
    20% {
        transform: scale(0.9) translateY(20px);
        opacity: 0;
    }
    40% {
        transform: scale(0.8) translateY(-40px);
        opacity: 0;
    }
    80% {
        transform: scale(0.95) translateY(10px);
        opacity: 0.5;
    }
    100% {
        transform: scale(1) translateY(0);
        opacity: 1;
    }
}

.location-change {
    animation: locationChange 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Loading Animation */
@keyframes loadIn {
    0% {
        transform: translateY(20px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

.load-in {
    animation: loadIn 0.5s ease-out forwards;
}

/* Smooth animations */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes bounceIn {
    0% { opacity: 0; transform: scale(0.3); }
    50% { transform: scale(1.05); }
    70% { transform: scale(0.9); }
    100% { opacity: 1; transform: scale(1); }
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(-5px);
    }
    75% {
        transform: translateX(5px);
    }
}

@keyframes shimmer {
    0% {
        background-position: -200% 0;
    }
    100% {
        background-position: 200% 0;
    }
}

/* Enhanced 3D Flip Animation */
@keyframes flipInX {
    0% {
        transform: perspective(2000px) rotateX(90deg) translateY(-100px) scale(0.8);
        opacity: 0;
        filter: blur(10px);
    }
    30% {
        transform: perspective(2000px) rotateX(-35deg) translateY(40px) scale(1.1);
        opacity: 0.7;
        filter: blur(0px);
    }
    50% {
        transform: perspective(2000px) rotateX(15deg) translateY(-20px) scale(0.95);
        opacity: 0.8;
    }
    70% {
        transform: perspective(2000px) rotateX(-7deg) translateY(10px) scale(1.02);
        opacity: 0.9;
    }
    100% {
        transform: perspective(2000px) rotateX(0deg) translateY(0) scale(1);
        opacity: 1;
    }
}

.weather-update {
    animation: flipInX 1.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    backface-visibility: visible !important;
    transform-style: preserve-3d;
    transform-origin: center top;
}

/* Forecast card animations */
@keyframes slideUpFade {
    0% {
        transform: translateY(50px) scale(0.8);
        opacity: 0;
        filter: blur(5px);
    }
    100% {
        transform: translateY(0) scale(1);
        opacity: 1;
        filter: blur(0);
    }
}

.forecast-card {
    animation: slideUpFade 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    opacity: 0;
}

/* Enhanced container effects */
.weather-update, .forecast-card {
    box-shadow: 0 15px 35px -15px rgba(0, 0, 0, 0.5),
                0 5px 15px -5px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.weather-update:hover, .forecast-card:hover {
    box-shadow: 0 25px 45px -20px rgba(0, 0, 0, 0.6),
                0 10px 20px -10px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transform: translateY(-5px);
}

/* Ensure forecast container is visible */
#forecast {
    opacity: 1 !important;
    display: block;
}

#forecast.hidden {
    display: none;
}

/* Glow effect */
.puzzle-card.animating::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 50% 50%, 
        rgba(255, 255, 255, 0.2), 
        transparent 70%);
    opacity: 1;
    pointer-events: none;
    border-radius: inherit;
    animation: glowPulse 1s ease-in-out;
}

@keyframes glowPulse {
    0% { opacity: 0; }
    50% { opacity: 1; }
    100% { opacity: 0; }
}

/* Skeleton Loading Animation */
.skeleton {
    background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0.1) 0%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0.1) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite linear;
    border-radius: 4px;
}

.skeleton-text {
    height: 20px;
    margin: 8px 0;
}

.skeleton-title {
    width: 200px;
    height: 32px;
}

.skeleton-temp {
    width: 120px;
    height: 48px;
}

.skeleton-desc {
    width: 150px;
    height: 24px;
}

.skeleton-container {
    display: none;
}

.loading .skeleton-container {
    display: block;
}

.loading .weather-info {
    display: none;
}

@keyframes gradientFlow {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Hover effects */
.hover-float:hover {
    animation: float 3s ease-in-out infinite;
}

.hover-glow:hover {
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.5));
}

/* Smooth transitions */
* {
    transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
}

/* Loading animation */
.loading {
    position: relative;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* Theme transition */
.theme-transition {
    transition: background-image 1s ease-in-out;
}

/* Card hover effects */
.card-hover {
    transition: all 0.3s ease-in-out;
}

.card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

/* Icon animations */
.icon-spin {
    transition: transform 0.3s ease-in-out;
}

.icon-spin:hover {
    transform: rotate(180deg);
}

/* Button animations */
.button-hover {
    transition: all 0.3s ease-in-out;
}

.button-hover:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.button-hover:active {
    transform: translateY(0);
}
